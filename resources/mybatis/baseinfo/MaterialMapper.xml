<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MaterialMapper">
	
	<!--表名 -->
	<sql id="tableName">
		BASEINFO_MATERIAL
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		MATERIAL_ID,	
		MATERIAL_CLASS_ID,
		MATERIAL_CODE,	
		MATERIAL_NAME,	
		MATERIAL_DESC,	
		MATERIAL_SPEC,	
		MATERIAL_SPEC_REAL,
		TYPE_NO,
		TYPE,
		DROPDOWN_FLAG,
		THICKNESS_NUM,
		WIDTH_NUM,
		LENGTH_NUM,
		THICKNESS_NUM_REAL,
		WIDTH_NUM_REAL,
		LENGTH_NUM_REAL,
		DENSITY_NUM,
		WEIGHT_LOGIC,
		WEIGHT_REAL,
		FILE_NO,	
		FIGURE_NO,	
		PRIMARY_UNIT,	
		SECOND_UNIT,	
		CHANGE_RATE,
		PURCHASE_PRICE,	
		STATUS,
		COMPANY_ID,	
		DEPARTMENT_ID,	
		GROUP_ID,	
		CREATE_USER,	
		CREATE_DATE,	
		MODIFY_USER,	
		MODIFY_DATE,	
		REMARK
	</sql>
	
	<!-- 字段 -->
	<sql id="selectField">
		MATERIAL_ID,	
		MATERIAL_CLASS_ID,
		MATERIAL_CODE,	
		MATERIAL_NAME,	
		MATERIAL_DESC,	
		MATERIAL_SPEC,	
		MATERIAL_SPEC_REAL,
		TYPE_NO,
		TYPE,
		DROPDOWN_FLAG,
		THICKNESS_NUM,
		WIDTH_NUM,
		LENGTH_NUM,
		THICKNESS_NUM_REAL,
		WIDTH_NUM_REAL,
		LENGTH_NUM_REAL,
		CONCAT(round(DENSITY_NUM,3),'') as "DENSITY_NUM",
		CONCAT(round(WEIGHT_LOGIC,3),'') as "WEIGHT_LOGIC",
		CONCAT(round(WEIGHT_REAL,3),'') as "WEIGHT_REAL",
		FILE_NO,	
		FIGURE_NO,	
		PRIMARY_UNIT,	
		SECOND_UNIT,	
		CONCAT(round(CHANGE_RATE,2),'') as "CHANGE_RATE",
		CONCAT(round(PURCHASE_PRICE,2),'') as "PURCHASE_PRICE",
		CASE STATUS WHEN '1' THEN '在用' WHEN '2' THEN '停用' END as "STATUS",
		COMPANY_ID,	
		DEPARTMENT_ID,	
		GROUP_ID,	
		CREATE_USER,	
		CREATE_DATE,	
		MODIFY_USER,	
		MODIFY_DATE,	
		REMARK
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{MATERIAL_ID},	
		#{MATERIAL_CLASS_ID},
		#{MATERIAL_CODE},	
		#{MATERIAL_NAME},	
		#{MATERIAL_DESC},	
		#{MATERIAL_SPEC},	
		#{MATERIAL_SPEC_REAL},
		#{TYPE_NO},
		#{TYPE},
		#{DROPDOWN_FLAG},
		#{THICKNESS_NUM},
		#{WIDTH_NUM},
		#{LENGTH_NUM},
		#{THICKNESS_NUM_REAL},
		#{WIDTH_NUM_REAL},
		#{LENGTH_NUM_REAL},
		#{DENSITY_NUM},
		#{WEIGHT_LOGIC},
		#{WEIGHT_REAL},
		#{FILE_NO},	
		#{FIGURE_NO},	
		#{PRIMARY_UNIT},	
		#{SECOND_UNIT},	
		#{CHANGE_RATE},	
		#{PURCHASE_PRICE},
		#{STATUS},
		#{COMPANY_ID},	
		#{DEPARTMENT_ID},	
		#{GROUP_ID},	
		#{CREATE_USER},	
		#{CREATE_DATE},	
		#{MODIFY_USER},	
		#{MODIFY_DATE},	
		#{REMARK}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<insert id="saveClass" parameterType="pd">
		insert into 
			baseinfo_material_class
		(
			MATERIAL_CLASS_ID,	
			MATERIAL_CLASS_CODE,	
			MATERIAL_CLASS_NAME,	
			TYPE,	
			GPR_RATE,
			MONTH_SUM_ITEM,
			STATUS,
			COMPANY_ID,	
			DEPARTMENT_ID,	
			GROUP_ID,	
			CREATE_USER,	
			CREATE_DATE,	
			MODIFY_USER,	
			MODIFY_DATE,	
			REMARK
		) values (
			#{MATERIAL_CLASS_ID},	
			#{MATERIAL_CLASS_CODE},	
			#{MATERIAL_CLASS_NAME},	
			#{TYPE},	
			#{GPR_RATE},
			#{MONTH_SUM_ITEM},
			#{STATUS},
			#{COMPANY_ID},	
			#{DEPARTMENT_ID},	
			#{GROUP_ID},	
			#{CREATE_USER},	
			#{CREATE_DATE},	
			#{MODIFY_USER},	
			#{MODIFY_DATE},	
			#{REMARK}
		)
	</insert>
	
	<update id="editClass" parameterType="pd">
		update
			baseinfo_material_class
		set 
			MATERIAL_CLASS_CODE = #{MATERIAL_CLASS_CODE},
			MATERIAL_CLASS_NAME = #{MATERIAL_CLASS_NAME},
			GPR_RATE = #{GPR_RATE},
			MONTH_SUM_ITEM = #{MONTH_SUM_ITEM},
			TYPE = #{TYPE},
			STATUS = #{STATUS},
			COMPANY_ID = #{COMPANY_ID},
			DEPARTMENT_ID = #{DEPARTMENT_ID},
			GROUP_ID = #{GROUP_ID},
			CREATE_USER = #{CREATE_USER},
			CREATE_DATE = #{CREATE_DATE},
			MODIFY_USER = #{MODIFY_USER},
			MODIFY_DATE = #{MODIFY_DATE},
			REMARK = #{REMARK}
		where 
			MATERIAL_CLASS_ID = #{MATERIAL_CLASS_ID}
	</update>
	
	
	<delete id="deleteClass" parameterType="pd">
		delete from
			baseinfo_material_class
		where 
			MATERIAL_CLASS_ID = #{MATERIAL_CLASS_ID}
	</delete>
	
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			MATERIAL_ID = #{MATERIAL_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			MATERIAL_CLASS_ID = #{MATERIAL_CLASS_ID},
			MATERIAL_CODE = #{MATERIAL_CODE},
			MATERIAL_NAME = #{MATERIAL_NAME},
			MATERIAL_DESC = #{MATERIAL_DESC},
			MATERIAL_SPEC = #{MATERIAL_SPEC},
			MATERIAL_SPEC_REAL = #{MATERIAL_SPEC_REAL},
		    TYPE_NO = #{TYPE_NO},
		    TYPE = #{TYPE},
			DROPDOWN_FLAG = #{DROPDOWN_FLAG},
		    THICKNESS_NUM = #{THICKNESS_NUM},
		    WIDTH_NUM = #{WIDTH_NUM},
		    LENGTH_NUM = #{LENGTH_NUM},
		    THICKNESS_NUM_REAL = #{THICKNESS_NUM_REAL},
			WIDTH_NUM_REAL = #{WIDTH_NUM_REAL},
			LENGTH_NUM_REAL = #{LENGTH_NUM_REAL},
		    DENSITY_NUM = #{DENSITY_NUM},
		    WEIGHT_LOGIC = #{WEIGHT_LOGIC},
		    WEIGHT_REAL = #{WEIGHT_REAL},
			FILE_NO = #{FILE_NO},
			FIGURE_NO = #{FIGURE_NO},
			PRIMARY_UNIT = #{PRIMARY_UNIT},
			SECOND_UNIT = #{SECOND_UNIT},
			CHANGE_RATE = #{CHANGE_RATE},
			PURCHASE_PRICE = #{PURCHASE_PRICE},
			STATUS = #{STATUS},
			COMPANY_ID = #{COMPANY_ID},
			DEPARTMENT_ID = #{DEPARTMENT_ID},
			GROUP_ID = #{GROUP_ID},
			CREATE_USER = #{CREATE_USER},
			CREATE_DATE = #{CREATE_DATE},
			MODIFY_USER = #{MODIFY_USER},
			MODIFY_DATE = #{MODIFY_DATE},
			REMARK = #{REMARK}
		where 
		MATERIAL_ID = #{MATERIAL_ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select
			t.MATERIAL_ID,	
			t.MATERIAL_CLASS_ID,
			t.MATERIAL_CODE,	
			t.MATERIAL_NAME,	
			t.MATERIAL_DESC,	
			t.MATERIAL_SPEC,	
			t.MATERIAL_SPEC_REAL,
			t.TYPE_NO,
			t.TYPE,
			t.DROPDOWN_FLAG,
			t.THICKNESS_NUM,
			t.WIDTH_NUM,
			t.LENGTH_NUM,
			t.THICKNESS_NUM_REAL,
			t.WIDTH_NUM_REAL,
			t.LENGTH_NUM_REAL,
			CONCAT(round(t.DENSITY_NUM,3),'') as "DENSITY_NUM",
			CONCAT(round(t.WEIGHT_LOGIC,3),'') as "WEIGHT_LOGIC",
			CONCAT(round(t.WEIGHT_REAL,3),'') as "WEIGHT_REAL",
			t.FILE_NO,	
			t.FIGURE_NO,	
			t.PRIMARY_UNIT,	
			t.SECOND_UNIT,	
			CONCAT(round(t.CHANGE_RATE,2),'') as "CHANGE_RATE",
			CONCAT(round(t.PURCHASE_PRICE,2),'') as "PURCHASE_PRICE",
			CASE t.STATUS WHEN '1' THEN '在用' WHEN '2' THEN '停用' END as "STATUS",
			t.COMPANY_ID,	
			t.DEPARTMENT_ID,	
			t.GROUP_ID,	
			t.CREATE_USER,	
			t.CREATE_DATE,	
			t.MODIFY_USER,	
			t.MODIFY_DATE,	
			t.REMARK,
			mc.MATERIAL_CLASS_CODE,
			mc.MATERIAL_CLASS_NAME
		from 
			<include refid="tableName"></include> t left join baseinfo_material_class mc on mc.MATERIAL_CLASS_ID = t.MATERIAL_CLASS_ID
		where 
			t.MATERIAL_ID = #{MATERIAL_ID}
	</select>
	
	<!-- 通过ID获取数据 -->
	<select id="findMaterialClassById" parameterType="pd" resultType="pd">
		select
			MATERIAL_CLASS_ID,	
			MATERIAL_CLASS_CODE,	
			MATERIAL_CLASS_NAME,	
			TYPE,	
			round(GPR_RATE,2) as "GPR_RATE",
			MONTH_SUM_ITEM,
			STATUS,
			COMPANY_ID,	
			DEPARTMENT_ID,	
			GROUP_ID,	
			CREATE_USER,	
			CREATE_DATE,	
			MODIFY_USER,	
			MODIFY_DATE,	
			REMARK
		from 
			baseinfo_material_class
		where 
			MATERIAL_CLASS_ID = #{MATERIAL_CLASS_ID}
	</select>
	
	<!-- 列表 -->
	<select id="MaterialClassdatalistPage" parameterType="page" resultType="pd">
		select
			MATERIAL_CLASS_ID,	
			MATERIAL_CLASS_CODE,	
			MATERIAL_CLASS_NAME,	
			TYPE,	
			round(GPR_RATE,2) as "GPR_RATE",
			MONTH_SUM_ITEM,
			CASE STATUS WHEN '1' THEN '在用' WHEN '2' THEN '停用' END as "STATUS",
			COMPANY_ID,	
			DEPARTMENT_ID,	
			GROUP_ID,	
			CREATE_USER,	
			CREATE_DATE,	
			MODIFY_USER,	
			MODIFY_DATE,	
			REMARK
		from 
			baseinfo_material_class
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(				
					MATERIAL_CLASS_CODE LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					MATERIAL_CLASS_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 					 
				)
		</if>
		<if test="pd.TYPE != null and pd.TYPE != ''"> AND TYPE = #{pd.TYPE}</if>
		<if test="pd.MATERIAL_CLASS_CODE != null and pd.MATERIAL_CLASS_CODE != ''"> AND MATERIAL_CLASS_CODE = #{pd.MATERIAL_CLASS_CODE}</if>
		order by MATERIAL_CLASS_NAME
	</select>

	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
			t.MATERIAL_ID,	
			t.MATERIAL_CLASS_ID,
			t.MATERIAL_CODE,	
			t.MATERIAL_NAME,	
			t.MATERIAL_DESC,	
			t.MATERIAL_SPEC,	
			t.MATERIAL_SPEC_REAL,
			t.TYPE_NO,
			t.TYPE,
			t.DROPDOWN_FLAG,
			t.THICKNESS_NUM,
			t.WIDTH_NUM,
			t.LENGTH_NUM,
			t.THICKNESS_NUM_REAL,
			t.WIDTH_NUM_REAL,
			t.LENGTH_NUM_REAL,
			CONCAT(round(t.DENSITY_NUM,3),'') as "DENSITY_NUM",
			CONCAT(round(t.WEIGHT_LOGIC,3),'') as "WEIGHT_LOGIC",
			CONCAT(round(t.WEIGHT_REAL,3),'') as "WEIGHT_REAL",
			t.FILE_NO,	
			t.FIGURE_NO,	
			t.PRIMARY_UNIT,	
			t.SECOND_UNIT,	
			CONCAT(round(t.CHANGE_RATE,2),'') as "CHANGE_RATE",
			CONCAT(round(t.PURCHASE_PRICE,2),'') as "PURCHASE_PRICE",
			CASE t.STATUS WHEN '1' THEN '在用' WHEN '2' THEN '停用' END as "STATUS",
			t.COMPANY_ID,	
			t.DEPARTMENT_ID,	
			t.GROUP_ID,	
			t.CREATE_USER,	
			t.CREATE_DATE,	
			t.MODIFY_USER,	
			t.MODIFY_DATE,	
			t.REMARK,
			mc.MATERIAL_CLASS_CODE,
			mc.MATERIAL_CLASS_NAME
		from 
		<include refid="tableName"></include> t left join baseinfo_material_class mc on mc.MATERIAL_CLASS_ID = t.MATERIAL_CLASS_ID
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(				
					t.MATERIAL_CODE LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					t.MATERIAL_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					 or 
					t.MATERIAL_DESC LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					t.MATERIAL_SPEC LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				)
		</if>
		<if test="pd.MATERIAL_SPEC_LIKE != null and pd.MATERIAL_SPEC_LIKE != ''"> AND t.MATERIAL_SPEC like concat('%',#{pd.MATERIAL_SPEC_LIKE},'%')</if>
		<if test="pd.MATERIAL_NAME_LIKE != null and pd.MATERIAL_NAME_LIKE != ''"> AND t.MATERIAL_NAME like concat('%',#{pd.MATERIAL_NAME_LIKE},'%')</if>
		<if test="pd.MATERIAL_CODE_LIKE != null and pd.MATERIAL_CODE_LIKE != ''"> AND t.MATERIAL_CODE like concat('%',#{pd.MATERIAL_CODE_LIKE},'%')</if>
		<if test="pd.TYPE != null and pd.TYPE != ''"> AND t.TYPE = #{pd.TYPE}</if>
		<if test="pd.MATERIAL_CODE != null and pd.MATERIAL_CODE != ''"> AND t.MATERIAL_CODE = #{pd.MATERIAL_CODE}</if>
		<if test="pd.MATERIAL_CLASS_ID != null and pd.MATERIAL_CLASS_ID != ''"> AND t.MATERIAL_CLASS_ID = #{pd.MATERIAL_CLASS_ID}</if>
		<if test="pd.FILE_NO != null and pd.FILE_NO != ''"> AND FILE_NO = #{pd.FILE_NO}</if>
		<if test="pd.FILE_NO_LIKE != null and pd.FILE_NO_LIKE != ''"> AND t.FILE_NO like concat('%',#{pd.FILE_NO_LIKE},'%')</if>
		<if test="pd.FIGURE_NO_LIKE != null and pd.FIGURE_NO_LIKE != ''"> AND t.FIGURE_NO like concat('%',#{pd.FIGURE_NO_LIKE},'%')</if>
		<if test="pd.DROPDOWN_FLAG != null and pd.DROPDOWN_FLAG != ''"> AND t.DROPDOWN_FLAG = #{pd.DROPDOWN_FLAG}</if>
		<if test="pd.OrderByCustom != null and pd.OrderByCustom == 'MATERIAL_NAME'">
			order by t.MATERIAL_NAME
		</if>
		<if test="pd.OrderByClause != null and pd.OrderByClause != ''">
			order by ${pd.OrderByClause}
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="selectField"></include>
		from 
		<include refid="tableName"></include>
		where 1=1 
		<if test="MATERIAL_NAME != null and MATERIAL_NAME != ''">AND MATERIAL_NAME = #{MATERIAL_NAME}</if>
		<if test="FILE_NO != null and FILE_NO != ''">AND FILE_NO = #{FILE_NO}</if>
		<if test="TYPE != null and TYPE != ''">AND TYPE = #{TYPE}</if>
		<if test="FIGURE_NO != null and FIGURE_NO != ''">AND FIGURE_NO = #{FIGURE_NO}</if>
		<if test="keywords!= null and keywords != ''"><!-- 关键词检索 -->
			and
				(				
					MATERIAL_CODE LIKE CONCAT(CONCAT('%', #{keywords}),'%')
					 or 
					MATERIAL_NAME LIKE CONCAT(CONCAT('%', #{keywords}),'%') 
					 or 
					MATERIAL_SPEC LIKE CONCAT(CONCAT('%', #{keywords}),'%')
				)
		</if>
		<if test="OrderByClause != null and OrderByClause != ''">
			order by ${OrderByClause}
		</if>
	</select>
	
	<!-- 列表 -->
	<select id="lisMaterialClasstAll" parameterType="pd" resultType="pd">
		select
			MATERIAL_CLASS_ID,	
			MATERIAL_CLASS_CODE,	
			MATERIAL_CLASS_NAME,	
			TYPE,	
			round(GPR_RATE,2) as "GPR_RATE",
			MONTH_SUM_ITEM,
			CASE STATUS WHEN '1' THEN '在用' WHEN '2' THEN '停用' END as "STATUS",
			COMPANY_ID,	
			DEPARTMENT_ID,	
			GROUP_ID,	
			CREATE_USER,	
			CREATE_DATE,	
			MODIFY_USER,	
			MODIFY_DATE,	
			REMARK
		from 
			baseinfo_material_class
		where 1=1
		<if test="keywords!= null and keywords != ''"><!-- 关键词检索 -->
			and
				(				
					MATERIAL_CLASS_CODE LIKE CONCAT(CONCAT('%', #{keywords}),'%')
					 or 
					MATERIAL_CLASS_NAME LIKE CONCAT(CONCAT('%', #{keywords}),'%') 					 
				)
		</if>
		<if test="TYPE != null and TYPE != ''"> AND TYPE = #{TYPE}</if>
		<if test="MATERIAL_CLASS_CODE != null and MATERIAL_CLASS_CODE != ''"> AND MATERIAL_CLASS_CODE = #{MATERIAL_CLASS_CODE}</if>
		order by MATERIAL_CLASS_NAME
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			MATERIAL_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<select id="listMonthSumItem" parameterType="pd" resultType="String" >
		select distinct month_sum_item
		from baseinfo_material_class
		where type='10'
	</select>
	<!-- zhudafeng -->
</mapper>